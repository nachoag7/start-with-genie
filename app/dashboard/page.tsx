'use client'

import React, { useRef } from 'react'
import { useEffect, useState } from 'react'
import { useRouter, usePathname, useSearchParams } from 'next/navigation'
import Link from 'next/link'
import { Download, MessageCircle, Mail, RefreshCw, FileText, Building2, CreditCard, CheckCircle, ChevronRight, HelpCircle, X, Bot, BadgeDollarSign, BookOpen, Clock, Eye, Download as DownloadIcon, ScrollText, Send, LogOut, Lock } from 'lucide-react'
import { Button } from '../../components/ui/Button'
import { supabase } from '../../lib/supabase'
import { formatAppleStyle } from '../../lib/utils'
import { generateLLCFilingInstructions, generateEINGuide, generateOperatingAgreement } from '../../lib/pdf-generator'
import GenieChat from '../../components/GenieChat'
import ContactSupportModal from '../../components/ContactSupportModal'
import llcStates from '../../data/llc_states.json';
import { motion, AnimatePresence } from 'framer-motion'
import confetti from 'canvas-confetti';
import ReactDOMServer from 'react-dom/server';
import DocumentsSection from '../../components/DocumentsSection';
import DashboardActions from '../../components/DashboardActions';
import PremiumButton from '../../components/ui/PremiumButton';
import BlurredDashboardOverlay from '../../components/BlurredDashboardOverlay';
import FrictionlessCheckoutModal from '../../components/FrictionlessCheckoutModal';
import ProgressChecklist from '../../components/ProgressChecklist';
import { markChecklistStep } from '../../lib/checklist';
import { PAYWALL_DISABLED } from '../../lib/config';
// Remove all @react-pdf/renderer and jsPDF imports
// Remove: import { pdf } from '@react-pdf/renderer';
// Remove: import { OperatingAgreementPDF } from '../../components/pdf/OperatingAgreementPDF';
// Remove: import { LLCInstructionsPDF } from '../../components/pdf/LLCInstructionsPDF';
// Remove: import { EINGuidePDF } from '../../components/pdf/EINGuidePDF';

interface User {
  id: string
  full_name: string
  business_name: string
  email: string
  state: string
  status: string
  business_address: string // ADDED
  is_solo_owner: string // "yes" or "no"
  partner_name?: string // optional, if partner
  ownership_primary?: string // NEW
  ownership_partner?: string // NEW
  checklist_status?: boolean[] // NEW
  has_paid?: boolean // NEW
  payment_date?: string // NEW
}

interface Document {
  id: string
  doc_type: string
  url: string
  created_at: string
}

// Define a single, Apple-style disclaimer block for all documents
const GenieDisclaimer = (
  <div style={{ marginTop: '40px', fontSize: '12px', color: '#666', lineHeight: 1.6, textAlign: 'center' }}>
    This document is for informational and educational purposes only. It is not legal, tax, or financial advice. 
    Start With Genie is not a law firm and does not provide legal services. You should consult a qualified attorney, 
    accountant, or advisor to ensure this document is appropriate for your specific situation.
    <div style={{ marginTop: '6px', fontSize: '11px', color: '#999' }}>Generated by Start With Genie</div>
  </div>
);

const DocumentCard = ({ 
  icon: Icon, 
  title, 
  subtitle, 
  onViewClick,
  onPdfClick,
  isPreview = false
}: { 
  icon: any; 
  title: string; 
  subtitle: string; 
  onViewClick: () => void;
  onPdfClick: () => void;
  isPreview?: boolean;
}) => (
  <motion.div
    initial={{ opacity: 0, y: 20 }}
    animate={{ opacity: 1, y: 0 }}
    transition={{ duration: 0.4 }}
    className={`bg-white rounded-xl border border-[#f2f2f2] shadow-sm p-5 flex flex-col justify-between h-48 transition-all duration-200 hover:shadow-md hover:scale-[1.01] ${isPreview ? 'relative overflow-hidden' : ''}`}
  >
    {isPreview && (
      <div className="absolute inset-0 bg-gradient-to-r from-transparent via-white/50 to-white/80 z-10"></div>
    )}
    <div className={`flex flex-col items-center text-center ${isPreview ? 'blur-sm' : ''}`}>
      <div className="w-12 h-12 bg-blue-50 rounded-xl flex items-center justify-center mb-4">
        <Icon className="w-5 h-5 text-blue-600" />
      </div>
      <h3 className="font-medium text-lg text-[#1c1c1e] mb-1">{title}</h3>
      <p className="text-sm text-[#8e8e93]">{subtitle}</p>
    </div>
    <div className={`flex gap-2 mt-6 justify-center ${isPreview ? 'blur-sm' : ''}`}>
      <Button size="md" onClick={onViewClick} disabled={isPreview}>
        <Eye className="w-4 h-4" />
        View
      </Button>
      <Button size="md" variant="secondary" className="!bg-gray-100 !hover:bg-gray-200 !text-gray-700 border-gray-300" onClick={onPdfClick} disabled={isPreview}>
        <Download className="w-4 h-4 mr-2" /> PDF
      </Button>
    </div>
  </motion.div>
);


export default function DashboardPage() {
  const [user, setUser] = useState<User | null>(null)
  const [documents, setDocuments] = useState<Document[]>([])
  const [isLoading, setIsLoading] = useState(true)
  const [isRegenerating, setIsRegenerating] = useState(false)
  const [isContactModalOpen, setIsContactModalOpen] = useState(false)
  const router = useRouter()
  const pathname = usePathname()
  const searchParams = useSearchParams()
  const [showGenie, setShowGenie] = useState(false)
  const [isPreviewMode, setIsPreviewMode] = useState(false)
  const [isProcessingPayment, setIsProcessingPayment] = useState(false)
  const [isCheckoutModalOpen, setIsCheckoutModalOpen] = useState(false)

  // Add refs for each document section
  const llcRef = useRef<HTMLDivElement>(null)
  const einRef = useRef<HTMLDivElement>(null)
  const oaRef = useRef<HTMLDivElement>(null)
  const allSetRef = useRef<HTMLDivElement>(null);
  const confettiPlayedRef = useRef(false);

  // Checklist state
  const [checklist, setChecklist] = useState([false, false, false])
  const [isChecklistLoading, setIsChecklistLoading] = useState(true)
  const [showCongrats, setShowCongrats] = useState(false)
  
  // UI state
  const [openSection, setOpenSection] = useState<string | null>(null)
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [modalContent, setModalContent] = useState<{ title: string; content: React.ReactNode }>({ title: '', content: <></> });
  const [checklistOpen, setChecklistOpen] = useState(false)
  const [documentsOpen, setDocumentsOpen] = useState(false)

  // Check if we're in preview mode or payment success
  useEffect(() => {
    const preview = searchParams.get('preview')
    const paymentSuccess = searchParams.get('payment_success')
    
    if (preview === 'true' || PAYWALL_DISABLED) {
      setIsPreviewMode(true)
    }
    
    if (paymentSuccess === 'true') {
      // Refresh user data to get updated payment status
      fetchUserData()
    }
  }, [searchParams])

  const handleUnlock = () => {
    if (PAYWALL_DISABLED) {
      // If paywall is disabled, just refresh the page to show full dashboard
      window.location.reload();
    } else {
      setIsCheckoutModalOpen(true);
    }
  };

  const handleCheckoutSuccess = () => {
    // Refresh user data to get updated payment status
    fetchUserData();
  };

  useEffect(() => {
    // Always scroll to top on dashboard mount or redirect
    window.scrollTo(0, 0)
  }, [])

  useEffect(() => {
    if (!isLoading) {
      // Scroll to top after all content is loaded
      window.scrollTo(0, 0)
    }
  }, [isLoading])

  const fetchUserData = async () => {
    try {
      // Check if user is authenticated
      const { data: { user: authUser } } = await supabase.auth.getUser()
      if (!authUser) {
        router.push('/login')
        return
      }

      // Get user data
      const { data: userData } = await supabase
        .from('users')
        .select('*')
        .eq('id', authUser.id)
        .single()

      if (!userData) {
        router.push('/login')
        return
      }

      // Check if user has completed onboarding (has essential fields)
      if (!userData.business_name || !userData.state || userData.business_name === 'My Business' || userData.state === 'CA') {
        // User hasn't completed onboarding, redirect to home
        router.push('/')
        return
      }

      setUser(userData)

      // Get user documents
      const { data: docs } = await supabase
        .from('documents')
        .select('*')
        .eq('user_id', authUser.id)
        .order('created_at', { ascending: false })

      setDocuments(docs || [])
    } catch (error) {
      console.error('Error fetching user data:', error)
      router.push('/login')
    } finally {
      setIsLoading(false)
    }
  }

  useEffect(() => {
    fetchUserData()
  }, [router])

  // Remove auto-scrolling behavior - let users stay where they are

  // Fetch checklist status from Supabase after user is loaded
  useEffect(() => {
    if (user) {
      const status = Array.isArray(user.checklist_status)
        ? user.checklist_status
        : (typeof user.checklist_status === 'string' ? JSON.parse(user.checklist_status) : [false, false, false])
      setChecklist(status)
      setShowCongrats(status.every(Boolean))
      setIsChecklistLoading(false)
    }
  }, [user])

  // Update checklist in Supabase
  const updateChecklist = async (newChecklist: boolean[]) => {
    setChecklist(newChecklist)
    setShowCongrats(newChecklist.every(Boolean))
    if (user) {
      await supabase.from('users').update({ checklist_status: newChecklist }).eq('id', user.id)
    }
  }

  // Handler for new checklist component
  const handleChecklistToggle = (id: string, next: boolean) => {
    const itemIndex = checklistItems.findIndex(item => item.id === id);
    if (itemIndex !== -1) {
      const newChecklist = [...checklist];
      newChecklist[itemIndex] = next;
      updateChecklist(newChecklist);
    }
  }

  // Progress calculation
  const completedCount = checklist.filter(Boolean).length
  const progress = completedCount / 3

  // Checklist step data for new components
  const checklistItems = [
    {
      id: 'file-llc',
      title: `File your LLC in ${user?.state || '[State]'}`,
      description: 'We prepared your state specific filing plan. Submit it to register your business and gain legal authority to operate.',
      completed: checklist[0] || false
    },
    {
      id: 'apply-ein',
      title: 'Apply for your EIN',
      description: 'Get your IRS tax ID fast. Required for banking, payroll, and taxes.',
      completed: checklist[1] || false
    },
    {
      id: 'sign-agreement',
      title: 'Print and sign your Operating Agreement',
      description: 'Your tailored agreement is ready. Sign it to define ownership and protect members.',
      completed: checklist[2] || false
    }
  ]

  const handleSignOut = async () => {
    await supabase.auth.signOut()
    router.push('/')
  }

  const handleRegenerateDocuments = async () => {
    if (!user) return
    
    setIsRegenerating(true)
    try {
      // Delete existing documents
      const { data: { user: authUser } } = await supabase.auth.getUser()
      if (!authUser) return

      // Delete from database
      await supabase
        .from('documents')
        .delete()
        .eq('user_id', authUser.id)

      // Delete from storage (optional - Supabase will handle orphaned files)
      
      // Regenerate documents
      console.log('[DEBUG] Regenerating documents...')
      
      // Generate LLC Filing Instructions
      const llcUrl = await generateLLCFilingInstructions({
        fullName: user.full_name,
        businessName: user.business_name,
        state: user.state,
        email: user.email
      })

      await supabase.from('documents').insert({
        user_id: authUser.id,
        doc_type: 'Guided LLC Registration',
        url: llcUrl
      })

      // Generate EIN Guide
      const einUrl = await generateEINGuide({
        fullName: user.full_name,
        businessName: user.business_name,
        state: user.state,
        email: user.email
      })

      await supabase.from('documents').insert({
        user_id: authUser.id,
        doc_type: 'Expedited EIN Application',
        url: einUrl
      })

      // Generate Operating Agreement
      const oaUrl = await generateOperatingAgreement({
        fullName: user.full_name,
        businessName: user.business_name,
        state: user.state,
        email: user.email
      })

      await supabase.from('documents').insert({
        user_id: authUser.id,
        doc_type: 'Operating Agreement',
        url: oaUrl
      })

      // Refresh documents
      await fetchUserData()
      
    } catch (error) {
      console.error('Error regenerating documents:', error)
    } finally {
      setIsRegenerating(false)
    }
  }

  // Helper: Anchor scroll
  // Remove scrollToSection and any scroll logic

  // Helper function to generate clean HTML content for PDF
  // Remove generatePDFContent and all usage of ReactDOMServer.renderToString
  // Only use DOM nodes for html2pdf.js

  // Helper to render OA content with/without signature section
  const renderOAContent = (user: User | null | undefined, isPDF: boolean) => {
    if (!user) return null;
    const isSingleMember = user.is_solo_owner === 'yes';
    const now = new Date();
    const formattedDate = now.toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' });
    const formattedTime = now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
    return (
      <div className="space-y-6" style={{ fontFamily: 'Arial, sans-serif', lineHeight: '1.6', position: 'relative', minHeight: isPDF ? '1100px' : undefined }}>
        <h2 className="text-2xl font-bold text-gray-900" style={{ fontSize: '24px', fontWeight: 'bold', marginBottom: '16px', color: '#1f2937' }}>Operating Agreement for {user.business_name}</h2>
        <div className="text-gray-700" style={{ fontSize: '16px', marginBottom: '16px' }}>
          <strong>Company Overview</strong><br />
          <b>Business Name:</b> {user.business_name}<br />
          <b>Principal Address:</b> {user.business_address || '[Not specified]'}<br />
          <b>State:</b> {user.state}
        </div>
        <h3 className="font-semibold text-lg mt-4" style={{ fontSize: '18px', fontWeight: '600', marginTop: '24px', marginBottom: '12px', color: '#1f2937' }}>1. Introduction</h3>
        <p style={{ fontSize: '14px', marginBottom: '16px', color: '#374151' }}>
          This Operating Agreement ("Agreement") is made effective as of the date above by and among the Member{isSingleMember ? '' : 's'} of {user.business_name}, a limited liability company formed under the laws of the State of {user.state}.
        </p>
        <h3 className="font-semibold text-lg mt-4" style={{ fontSize: '18px', fontWeight: '600', marginTop: '24px', marginBottom: '12px', color: '#1f2937' }}>2. Company Overview</h3>
        <ul className="list-disc ml-6" style={{ fontSize: '14px', marginBottom: '16px', color: '#374151', paddingLeft: '24px' }}>
          <li style={{ marginBottom: '4px' }}>Business Name: {user.business_name}</li>
          <li style={{ marginBottom: '4px' }}>State of Formation: {user.state}</li>
          <li style={{ marginBottom: '4px' }}>Effective Date: {new Date().toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' })}</li>
          <li style={{ marginBottom: '4px' }}>Entity Type: {isSingleMember ? 'Single-Member LLC' : 'Multi-Member LLC'}</li>
          <li style={{ marginBottom: '4px' }}>Managed By: Member-managed</li>
          <li style={{ marginBottom: '4px' }}>Principal Address: {user.business_address || '[Not specified]'}</li>
        </ul>
        <h3 className="font-semibold text-lg mt-4" style={{ fontSize: '18px', fontWeight: '600', marginTop: '24px', marginBottom: '12px', color: '#1f2937' }}>3. Purpose of the LLC</h3>
        <p style={{ fontSize: '14px', marginBottom: '16px', color: '#374151' }}>The purpose of the LLC is to engage in any lawful business activity permitted under the laws of {user.state}. The Member{isSingleMember ? '' : 's'} may modify the purpose as needed.</p>
        <h3 className="font-semibold text-lg mt-4" style={{ fontSize: '18px', fontWeight: '600', marginTop: '24px', marginBottom: '12px', color: '#1f2937' }}>4. Ownership</h3>
        <ul className="list-disc ml-6" style={{ fontSize: '14px', marginBottom: '16px', color: '#374151', paddingLeft: '24px' }}>
          <li style={{ marginBottom: '4px' }}>Member{isSingleMember ? '' : 's'}: {isSingleMember ? user.full_name : `${user.full_name} and ${user.partner_name || '[Partner Name]'}`}</li>
          {isSingleMember ? (
            <li style={{ marginBottom: '4px' }}>This is a Single-Member LLC, owned and operated by {user.full_name}.</li>
          ) : (
            <>
              <li style={{ marginBottom: '4px' }}>{user.full_name}: {user.ownership_primary || '50'}% ownership</li>
              <li style={{ marginBottom: '4px' }}>{user.partner_name || '[Partner Name]'}: {user.ownership_partner || '50'}% ownership</li>
              <li style={{ marginBottom: '4px' }}>This is a Multi-Member LLC, owned and operated by both members.</li>
            </>
          )}
          <li style={{ marginBottom: '4px' }}>Each Member owns an equal share of the LLC unless otherwise agreed in writing.</li>
        </ul>
        <h3 className="font-semibold text-lg mt-4" style={{ fontSize: '18px', fontWeight: '600', marginTop: '24px', marginBottom: '12px', color: '#1f2937' }}>5. Capital Contributions</h3>
        <ul className="list-disc ml-6" style={{ fontSize: '14px', marginBottom: '16px', color: '#374151', paddingLeft: '24px' }}>
          <li style={{ marginBottom: '4px' }}>Initial contributions from Member{isSingleMember ? '' : 's'}: [Not specified]</li>
          <li style={{ marginBottom: '4px' }}>No additional contributions are required unless agreed in writing by all Member{isSingleMember ? '' : 's'}.</li>
        </ul>
        {/* Section 6: Profit and Loss Allocation */}
        <div
          style={{
            pageBreakBefore: isPDF ? 'always' : undefined, // Force new page for PDF if needed
            breakBefore: isPDF ? 'page' : undefined, // For modern browsers/PDF
            paddingTop: isPDF ? 32 : undefined,
            marginBottom: isPDF ? 24 : '16px',
            background: 'none',
          }}
        >
          <h3
            className="font-semibold text-lg mt-4"
            style={{
              fontSize: '18px',
              fontWeight: 600,
              marginTop: '24px',
              marginBottom: '12px',
              color: '#1f2937',
              lineHeight: 1.3,
              clear: 'both',
              display: 'block',
            }}
          >
            6. Profit and Loss Allocation
          </h3>
          <p
            style={{
              fontSize: '14px',
              marginBottom: 0,
              color: '#374151',
              lineHeight: 1.7,
              marginTop: 0,
              textAlign: 'left',
              display: 'block',
            }}
          >
            All profits and losses will be distributed in proportion to ownership, unless otherwise agreed upon in writing. Distributions will be made at the discretion of the Member{isSingleMember ? '' : 's'}.
          </p>
        </div>
        <h3 className="font-semibold text-lg mt-4" style={{ fontSize: '18px', fontWeight: '600', marginTop: '24px', marginBottom: '12px', color: '#1f2937' }}>7. Management and Voting</h3>
        <p style={{ fontSize: '14px', marginBottom: '16px', color: '#374151' }}>
          The LLC is Member-managed. Major decisions (such as admitting new members or dissolving the LLC) require approval by all Member{isSingleMember ? '' : 's'}.
          {isSingleMember ? '' : ' Each member’s voting power is proportional to their ownership percentage.'}
        </p>
        <h3 className="font-semibold text-lg mt-4" style={{ fontSize: '18px', fontWeight: '600', marginTop: '24px', marginBottom: '12px', color: '#1f2937' }}>8. Liability Protection</h3>
        <p style={{ fontSize: '14px', marginBottom: '16px', color: '#374151' }}>Member{isSingleMember ? '' : 's'} are not personally liable for the debts or obligations of the LLC. The LLC will indemnify Member{isSingleMember ? '' : 's'} to the extent permitted by law.</p>
        <h3 className="font-semibold text-lg mt-4" style={{ fontSize: '18px', fontWeight: '600', marginTop: '24px', marginBottom: '12px', color: '#1f2937' }}>9. Ownership Changes</h3>
        <p style={{ fontSize: '14px', marginBottom: '16px', color: '#374151' }}>No Member may transfer ownership without written consent from the other Member{isSingleMember ? '' : 's'}, unless required by law.</p>
        <h3 className="font-semibold text-lg mt-4" style={{ fontSize: '18px', fontWeight: '600', marginTop: '24px', marginBottom: '12px', color: '#1f2937' }}>10. Dissolution</h3>
        <p style={{ fontSize: '14px', marginBottom: '16px', color: '#374151' }}>The LLC may be dissolved upon:<br/>- A majority vote by Member{isSingleMember ? '' : 's'}<br/>- Completion of its business purpose<br/>- Only one Member remaining (if multi-member)<br/>Upon dissolution, assets will be distributed in this order:<br/>1. Creditors<br/>2. Taxes<br/>3. Members based on ownership</p>
        <h3 className="font-semibold text-lg mt-4" style={{ fontSize: '18px', fontWeight: '600', marginTop: '24px', marginBottom: '12px', color: '#1f2937' }}>11. Governing Law</h3>
        <p style={{ fontSize: '14px', marginBottom: '16px', color: '#374151' }}>This Agreement is governed by the laws of the State of {user.state}.</p>
        {isPDF && (
          <div style={{ marginTop: '60px', marginBottom: '56px', width: '100%' }}>
            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', width: '100%', marginBottom: '32px' }}>
              <div style={{ display: 'flex', alignItems: 'center', gap: '40px', width: '100%' }}>
                <span style={{ fontSize: '13px', color: '#888', minWidth: 90 }}>Signature:</span>
                <span style={{ borderBottom: '1.5px solid #bbb', flex: 1, height: 0, marginRight: 24 }}></span>
                <span style={{ fontSize: '13px', color: '#888', minWidth: 40, marginLeft: 24 }}>Date:</span>
                <span style={{ borderBottom: '1.5px solid #bbb', width: 120, height: 0 }}></span>
              </div>
              <div style={{ fontSize: '13px', color: '#888', marginTop: 10, marginLeft: 0 }}>Printed Name: <span style={{ color: '#222', fontWeight: 500 }}>{user.full_name}</span></div>
            </div>
          </div>
        )}
      </div>
    );
  };

  // 1. Remove the handleDownloadPDF function entirely.
  // 2. Remove any Button or UI element that references handleDownloadPDF or PDF download for any document.
  // 3. Ensure only the Print / Save as PDF button remains for the Operating Agreement section.
  // 4. Remove any import or usage of html2pdf.js or related PDF logic.

  // Helper to get document URL by type
  const getDocUrl = (type: string) => documents.find(d => d.doc_type === type)?.url;

  // Modal state for document viewing
  const [modalOpen, setModalOpen] = useState<null | 'llc-instructions' | 'ein-guide' | 'operating-agreement'>(null);

  // Find state info for the user's state abbreviation
  const stateInfo = user ? llcStates.find(row => row.Abbreviation?.toUpperCase() === user.state?.toUpperCase()) : null;

  // For dashboard preview:
  let llcHtml: React.ReactNode = null;
  let einHtml: React.ReactNode = null;
  let filingFee, processingTime, filingUrl;
  if (user && stateInfo) {
    filingFee = stateInfo['Avg Filing Fee'] ? `$${stateInfo['Avg Filing Fee']}` : 'Unavailable – please check your state’s website';
    processingTime = stateInfo['Processing Time'] || 'Unavailable – please check your state’s website';
    filingUrl = stateInfo['Filing URL'] || 'Unavailable – please check your state’s website';
    llcHtml = (
      <div className="space-y-6" style={{ fontFamily: 'Arial, sans-serif', lineHeight: '1.6' }}>
        <h2 className="text-2xl font-bold text-gray-900" style={{ fontSize: '24px', fontWeight: 'bold', marginBottom: '16px', color: '#1f2937' }}>Guided LLC Registration for {user.business_name}</h2>
        <div className="text-gray-700" style={{ fontSize: '16px', color: '#374151', marginBottom: '8px' }}>Prepared for {user.full_name} | Forming in {user.state}</div>
        <div className="text-gray-500 text-sm mb-2" style={{ fontSize: '14px', color: '#6b7280', marginBottom: '8px' }}>Start With Genie – Your personal LLC assistant</div>
        <div className="text-gray-500 text-sm mb-4" style={{ fontSize: '14px', color: '#6b7280', marginBottom: '16px' }}>Effective Date: {new Date().toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' })}</div>
        <h3 className="font-semibold text-lg mt-4" style={{ fontSize: '18px', fontWeight: '600', marginTop: '24px', marginBottom: '12px', color: '#1f2937' }}>1. Why This Step Matters</h3>
        <p style={{ fontSize: '14px', marginBottom: '16px', color: '#374151' }}>Filing your Articles of Organization is what officially creates your LLC with the state. Once approved, your business becomes legally recognized and ready to operate.</p>
        <h3 className="font-semibold text-lg mt-4" style={{ fontSize: '18px', fontWeight: '600', marginTop: '24px', marginBottom: '12px', color: '#1f2937' }}>2. What You'll Need</h3>
        <ul className="list-disc ml-6" style={{ fontSize: '14px', marginBottom: '16px', color: '#374151', paddingLeft: '24px' }}>
          <li style={{ marginBottom: '4px' }}>Business name: {user.business_name} (your official name must include "LLC," "L.L.C.," or "Limited Liability Company")</li>
          <li style={{ marginBottom: '4px' }}>Owner name(s): {user.full_name}</li>
          <li style={{ marginBottom: '4px' }}>Business address</li>
          <li style={{ marginBottom: '4px' }}><strong>Address Tip:</strong> You can usually use your home address, but it must be a physical location — no PO Boxes. If you want privacy, a virtual office address may be an option.</li>
          <li style={{ marginBottom: '4px' }}>Registered Agent (you or someone else in {user.state})</li>
          <li style={{ marginBottom: '4px' }}><strong>What's a Registered Agent?</strong> This is the person or business responsible for receiving legal documents on behalf of your LLC. You can be your own agent if you're a {user.state} resident with a physical address.</li>
          <li style={{ marginBottom: '4px' }}>Management structure: Member-managed</li>
          <li style={{ marginBottom: '4px' }}>Filing website login (some states require creating an account)</li>
        </ul>
        <h3 className="font-semibold text-lg mt-4" style={{ fontSize: '18px', fontWeight: '600', marginTop: '24px', marginBottom: '12px', color: '#1f2937' }}>3. Filing Details for {user.state}</h3>
        <ul className="list-disc ml-6" style={{ fontSize: '14px', marginBottom: '16px', color: '#374151', paddingLeft: '24px' }}>
          <li style={{ marginBottom: '4px' }}>Filing Fee: {filingFee}</li>
          <li style={{ marginBottom: '4px' }}>Processing Time: {processingTime}</li>
          <li style={{ marginBottom: '4px' }}>Where to File: <a href={filingUrl} className="text-blue-600 underline" target="_blank" rel="noopener noreferrer" style={{ color: '#2563eb', textDecoration: 'underline' }}>{filingUrl}</a></li>
        </ul>
        {/* Step-by-Step Instructions - PDF formatting fix */}
        <h3 className="font-semibold text-lg mt-4" style={{ fontSize: '18px', fontWeight: 600, marginTop: 24, marginBottom: 12, color: '#1f2937' }}>4. Step-by-Step Instructions</h3>
        <ol className="list-decimal ml-6" style={{ fontSize: '14px', marginBottom: '16px', color: '#374151', paddingLeft: '28px', lineHeight: 1.7, textAlign: 'left', maxWidth: '100%', wordBreak: 'break-word', overflowWrap: 'anywhere' }}>
          <li style={{ marginBottom: '10px' }}>Go to the link above and create an account (if required)</li>
          <li style={{ marginBottom: '10px' }}>Select "Form a New LLC" or "Articles of Organization"</li>
          <li style={{ marginBottom: '10px' }}>Enter your business and owner information:
            <ul className="list-disc ml-6 mt-2" style={{ paddingLeft: '20px' }}>
              <li>For <strong>Business Name</strong>, enter "{user.business_name}"</li>
              <li>Under <strong>Principal Office Address</strong>, use your business address</li>
              <li>For <strong>Organizers</strong>, list your name and title (e.g., "{user.full_name}, Member")</li>
              <li>For <strong>Management Type</strong>, choose "Member-managed"</li>
            </ul>
          </li>
          <li style={{ marginBottom: '10px' }}>Add your Registered Agent information</li>
          <li style={{ marginBottom: '10px' }}>Pay the filing fee online</li>
          <li style={{ marginBottom: '10px' }}>Submit the application and wait for approval</li>
        </ol>
        <h3 className="font-semibold text-lg mt-4" style={{ fontSize: '18px', fontWeight: '600', marginTop: '24px', marginBottom: '12px', color: '#1f2937' }}>5. After You File</h3>
        <p style={{ fontSize: '14px', marginBottom: '16px', color: '#374151' }}>Once approved, you'll receive a confirmation document or certificate from the state. Save this — you'll need it for your EIN, bank account, and taxes.<br/>Next step: Apply for your EIN and sign your Operating Agreement.</p>
      </div>
    );
    einHtml = (
      <div className="space-y-6" style={{ fontFamily: 'Arial, sans-serif', lineHeight: '1.6' }}>
        <h2 className="text-2xl font-bold text-gray-900" style={{ fontSize: '24px', fontWeight: 'bold', marginBottom: '16px', color: '#1f2937' }}>Expedited EIN Application for {user.business_name}</h2>
        <div className="text-gray-700" style={{ fontSize: '16px', color: '#374151', marginBottom: '8px' }}>Prepared for {user.full_name} | Formed in {user.state}</div>
        <div className="text-gray-500 text-sm mb-2" style={{ fontSize: '14px', color: '#6b7280', marginBottom: '8px' }}>Start With Genie – Your personal LLC assistant</div>
        <div className="text-gray-500 text-sm mb-4" style={{ fontSize: '14px', color: '#6b7280', marginBottom: '16px' }}>Effective Date: {new Date().toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' })}</div>
        <h3 className="font-semibold text-lg mt-4" style={{ fontSize: '18px', fontWeight: '600', marginTop: '24px', marginBottom: '12px', color: '#1f2937' }}>1. What Is an EIN?</h3>
        <p style={{ fontSize: '14px', marginBottom: '16px', color: '#374151' }}>An EIN (Employer Identification Number) is a unique ID issued by the IRS. Think of it as your business's Social Security Number — it's required to:<br/>- Open a business bank account<br/>- File taxes<br/>- Hire employees<br/>- Apply for business credit<br/>Even if you're the only owner, most banks and services will ask for your EIN.</p>
        <h3 className="font-semibold text-lg mt-4" style={{ fontSize: '18px', fontWeight: '600', marginTop: '24px', marginBottom: '12px', color: '#1f2937' }}>2. Do You Need One?</h3>
        <p style={{ fontSize: '14px', marginBottom: '16px', color: '#374151' }}>Most LLCs do need an EIN. Even if you're a single-member LLC with no employees, you'll likely need it for banking, taxes, or applying for licenses.<br/>Good news: getting an EIN is completely free and only takes a few minutes.</p>
        <h3 className="font-semibold text-lg mt-4" style={{ fontSize: '18px', fontWeight: '600', marginTop: '24px', marginBottom: '12px', color: '#1f2937' }}>3. How to Apply Online (Recommended)</h3>
        <ul className="list-disc ml-6" style={{ fontSize: '14px', marginBottom: '16px', color: '#374151', paddingLeft: '24px' }}>
          <li style={{ marginBottom: '4px' }}>The IRS provides a free online application for EINs.</li>
          <li style={{ marginBottom: '4px' }}>Where to apply: <a href="https://irs.gov/ein" className="text-blue-600 underline" target="_blank" rel="noopener noreferrer" style={{ color: '#2563eb', textDecoration: 'underline' }}>https://irs.gov/ein</a></li>
          <li style={{ marginBottom: '4px' }}>When: Monday through Friday, 7:00 AM – 10:00 PM EST</li>
          <li style={{ marginBottom: '4px' }}>What you'll need: your name ({user.full_name}), your business name ({user.business_name}), business address, business structure: LLC, whether you are the owner</li>
          <li style={{ marginBottom: '4px' }}>The application takes about 10 minutes. You'll receive your EIN immediately after submission.</li>
        </ul>
        <h3 className="font-semibold text-lg mt-4" style={{ fontSize: '18px', fontWeight: '600', marginTop: '24px', marginBottom: '12px', color: '#1f2937' }}>4. After You Apply</h3>
        <ul className="list-disc ml-6" style={{ fontSize: '14px', marginBottom: '16px', color: '#374151', paddingLeft: '24px' }}>
          <li style={{ marginBottom: '4px' }}>Save the confirmation letter (CP 575) — this is your proof of EIN</li>
          <li style={{ marginBottom: '4px' }}>You'll need it to open a business bank account, file taxes, and set up payroll</li>
          <li style={{ marginBottom: '4px' }}>Come back to your Genie Dashboard to download your Operating Agreement</li>
        </ul>
        <h3 className="font-semibold text-lg mt-4" style={{ fontSize: '18px', fontWeight: '600', marginTop: '24px', marginBottom: '12px', color: '#1f2937' }}>5. Alternate Filing (Mail or Fax)</h3>
        <ul className="list-disc ml-6" style={{ fontSize: '14px', marginBottom: '16px', color: '#374151', paddingLeft: '24px' }}>
          <li style={{ marginBottom: '4px' }}>If you don't have a Social Security Number or can't use the online form: download Form SS-4, fill it out and send it by mail or fax to the IRS</li>
          <li style={{ marginBottom: '4px' }}>This method takes longer, but works for non-U.S. residents and others with special cases.</li>
        </ul>
      </div>
    );
  }

  // For dashboard preview:
  const oaHtml: React.ReactNode = renderOAContent(user!, false);
  // For PDF generation:
  const oaHtmlPDF: React.ReactNode = renderOAContent(user!, true);

  // Modal content map (must be after llcHtml, einHtml, oaHtml)
  const docModalContent = {
    'llc-instructions': llcHtml,
    'ein-guide': einHtml,
    'operating-agreement': oaHtml,
  };
  const docModalTitles = {
    'llc-instructions': 'Guided LLC Registration',
    'ein-guide': 'Expedited EIN Application',
    'operating-agreement': 'Operating Agreement',
  };

  const toggleSection = (id: string) => {
    setOpenSection(openSection === id ? null : id)
  }



  const handleDocumentsToggle = () => setDocumentsOpen((v) => !v)

  // Add error state
  // const [pdfError, setPdfError] = useState<string | null>(null);

  // PDF download handlers
  // Remove handleDownloadOA, handleDownloadLLC, handleDownloadEIN (all @react-pdf/renderer usage)

  // 1. Add handlePrintOperatingAgreement function:
  const handlePrintOperatingAgreement = () => {
    const oaHtmlString = document.getElementById('printable-operating-agreement-hidden')?.innerHTML;
    if (!oaHtmlString || oaHtmlString.trim() === '') {
      // setPdfError('Operating Agreement content is missing or failed to render.'); // Removed
      return;
    }
    // Generate the minimalist footer as a string
    const now = new Date();
    const formattedDate = now.toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' });
    const formattedTime = now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
    const pdfFooter = `<div style="position:fixed;bottom:32px;left:40px;right:40px;display:flex;justify-content:space-between;align-items:center;font-size:11px;color:#aaa;font-family:-apple-system,Arial,sans-serif;pointer-events:none;">
      <div style="text-align:left;">${formattedDate}, ${formattedTime}</div>
      <div style="text-align:right;font-weight:500;">Operating Agreement</div>
    </div>`;
    // Apple-style disclaimer (only once, at the very bottom)
    const pdfDisclaimer = `<div style="margin-top:60px;font-size:12px;color:#888;line-height:1.6;text-align:center;font-family:-apple-system,Arial,sans-serif;">
      This document is for informational and educational purposes only. It is not legal, tax, or financial advice. Start With Genie is not a law firm and does not provide legal services. You should consult a qualified attorney, accountant, or advisor to ensure this document is appropriate for your specific situation.
      <div style="margin-top:6px;font-size:11px;color:#aaa;">Generated by Start With Genie</div>
    </div>`;
    const printWindow = window.open('', '_blank', 'width=900,height=1200');
    if (!printWindow) return;
    printWindow.document.write(`
      <html>
        <head>
          <title>Operating Agreement</title>
          <style>
            body { font-family: -apple-system, Arial, sans-serif; padding: 40px; font-size: 14px; line-height: 1.6; color: #222; background: #fff; margin: 0; }
            @media print {
              body { margin: 0; }
              .no-print { display: none !important; }
            }
          </style>
        </head>
        <body>
          <div style="min-height:1000px;">
            ${oaHtmlString}
            ${pdfDisclaimer}
          </div>
          ${pdfFooter}
          <script>window.onload = function() { window.print(); window.onafterprint = function() { window.close(); }; };</script>
        </body>
      </html>
    `);
    printWindow.document.close();
  };

  // Print handlers for each document
  const handlePrintLLCInstructions = () => {
    const llcHtmlString = document.getElementById('printable-llc-instructions-hidden')?.innerHTML;
    if (!llcHtmlString || llcHtmlString.trim() === '') {
      // setPdfError('LLC Filing Instructions content is missing or failed to render.'); // Removed
      return;
    }
    const printWindow = window.open('', '_blank', 'width=900,height=1200');
    if (!printWindow) return;
    printWindow.document.write(`
      <html>
        <head>
          <title>Guided LLC Registration</title>
          <style>
            body { font-family: -apple-system, sans-serif; padding: 40px; font-size: 14px; line-height: 1.6; }
          </style>
        </head>
        <body>
          ${llcHtmlString}
          <script>window.onload = function() { window.print(); window.onafterprint = function() { window.close(); }; };</script>
        </body>
      </html>
    `);
    printWindow.document.close();
  };

  const handlePrintEINGuide = () => {
    const einHtmlString = document.getElementById('printable-ein-guide-hidden')?.innerHTML;
    if (!einHtmlString || einHtmlString.trim() === '') {
      // setPdfError('EIN Guide content is missing or failed to render.'); // Removed
      return;
    }
    const printWindow = window.open('', '_blank', 'width=900,height=1200');
    if (!printWindow) return;
    printWindow.document.write(`
      <html>
        <head>
          <title>Expedited EIN Application</title>
          <style>
            body { font-family: -apple-system, sans-serif; padding: 40px; font-size: 14px; line-height: 1.6; }
          </style>
        </head>
        <body>
          ${einHtmlString}
          <script>window.onload = function() { window.print(); window.onafterprint = function() { window.close(); }; };</script>
        </body>
      </html>
    `);
    printWindow.document.close();
  };

  // Confetti and scroll effect when checklist is completed
  useEffect(() => {
    if (showCongrats && !confettiPlayedRef.current) {
      // Remove scrollIntoView to prevent auto-scroll to All Set block
      // Trigger confetti
      confettiPlayedRef.current = true;
      confetti({
        particleCount: 80,
        spread: 70,
        origin: { y: 0.3 },
        startVelocity: 30,
        gravity: 0.7,
        scalar: 0.8,
        ticks: 200,
        colors: ['#60a5fa', '#34d399', '#fbbf24', '#a5b4fc', '#f472b6'],
        zIndex: 9999,
      });
      setTimeout(() => {
        confetti.reset();
      }, 1800);
    }
    // Reset confetti trigger if checklist is reset
    if (!showCongrats) {
      confettiPlayedRef.current = false;
    }
  }, [showCongrats]);

  // Helper: Check which PDFs are missing
  const requiredDocs = [
    'LLC Filing Instructions',
    'EIN Guide',
    'Operating Agreement',
  ];

  // Check which PDFs are missing and generate them automatically
  const checkMissingDocs = (docs: Document[]) => {
    const docTypes = docs.map(d => d.doc_type);
    return requiredDocs.filter(type => !docTypes.includes(type));
  };

  // Automatically generate missing PDFs when user first visits dashboard
  useEffect(() => {
    const generateMissingPDFs = async (missing: string[]) => {
      if (!user || missing.length === 0) return;
      
      console.log('[DEBUG] Generating missing PDFs:', missing);
      
      try {
        await Promise.all(missing.map(async (type) => {
          let url = '';
          if (type === 'Guided LLC Registration') {
            url = await generateLLCFilingInstructions({
              fullName: user.full_name,
              businessName: user.business_name,
              state: user.state,
              email: user.email,
            });
          } else if (type === 'Expedited EIN Application') {
            url = await generateEINGuide({
              fullName: user.full_name,
              businessName: user.business_name,
              state: user.state,
              email: user.email,
            });
          } else if (type === 'Operating Agreement') {
            url = await generateOperatingAgreement({
              fullName: user.full_name,
              businessName: user.business_name,
              state: user.state,
              email: user.email,
            });
          }
          
          if (url) {
            await supabase.from('documents').insert({
              user_id: user.id,
              doc_type: type,
              url,
            });
            console.log('[DEBUG] Generated and saved:', type);
          }
        }));
        
        // Refresh documents after generation
        await fetchUserData();
        console.log('[DEBUG] PDF generation complete');
      } catch (err: any) {
        console.error('[DEBUG] Error generating PDFs:', err);
      }
    };

    if (user && documents && !isLoading) {
      const missing = checkMissingDocs(documents);
      if (missing.length > 0) {
        console.log('[DEBUG] Missing PDFs detected:', missing);
        generateMissingPDFs(missing);
      }
    }
  }, [user, documents, isLoading]);

  if (isLoading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600"></div>
      </div>
    )
  }
  if (!user) return null

  // Check if user has paid (default to false if not set)
  const hasPaid = user.has_paid === true;

  // Anchor links
  const docAnchors = [
    { id: 'llc-instructions', label: 'LLC Instructions' },
    { id: 'ein-guide', label: 'EIN Guide' },
    { id: 'operating-agreement', label: 'Operating Agreement' }
  ]

  // Document HTML content generators (match PDF logic, but HTML)
      const today = new Date().toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' });
  // --- HTML content for each doc ---

  // Remove the pdfLoading and pdfError cards
  // if (pdfLoading) {
  //   return (
  //     <div className="min-h-screen flex flex-col items-center justify-center bg-neutral-50">
  //       <motion.div
  //         initial={{ opacity: 0, scale: 0.96 }}
  //         animate={{ opacity: 1, scale: 1 }}
  //         transition={{ duration: 0.5, ease: 'easeOut' }}
  //         className="flex flex-col items-center gap-6 p-10 bg-white/90 rounded-3xl shadow-2xl border border-gray-100 backdrop-blur-md mt-32"
  //       >
  //         <div className="w-16 h-16 rounded-full bg-blue-100 flex items-center justify-center mb-2 animate-spin-slow">
  //           <svg className="w-10 h-10 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor"><circle cx="12" cy="12" r="10" strokeWidth="4" className="opacity-25" /><path d="M4 12a8 8 0 018-8" strokeWidth="4" className="opacity-75" /></svg>
  //         </div>
  //         <h2 className="text-xl font-semibold text-gray-900 text-center">Preparing your documents…</h2>
  //         <p className="text-base text-gray-600 text-center max-w-xs">This usually takes less than 10 seconds. Your personalized PDFs will appear here as soon as they're ready.</p>
  //       </motion.div>
  //     </div>
  //   );
  // }
  // if (pdfError) {
  //   return (
  //     <div className="min-h-screen flex flex-col items-center justify-center bg-neutral-50">
  //       <motion.div
  //         initial={{ opacity: 0, scale: 0.96 }}
  //         animate={{ opacity: 1, scale: 1 }}
  //         transition={{ duration: 0.5, ease: 'easeOut' }}
  //         className="flex flex-col items-center gap-6 p-10 bg-white/90 rounded-3xl shadow-2xl border border-gray-100 backdrop-blur-md mt-32"
  //       >
  //         <div className="w-16 h-16 rounded-full bg-red-100 flex items-center justify-center mb-2">
  //           <X className="w-10 h-10 text-red-500" />
  //         </div>
  //         <h2 className="text-xl font-semibold text-gray-900 text-center">There was a problem preparing your documents.</h2>
  //         <p className="text-base text-gray-600 text-center max-w-xs">Please refresh the page or contact support if this continues.</p>
  //         <Button onClick={() => window.location.reload()} className="mt-2">Try Again</Button>
  //       </motion.div>
  //     </div>
  //   );
  // }

  // Prepare documents data for DocumentsSection
  const docsData = [
    {
      id: 'llc-instructions',
              title: 'Guided LLC Registration',
      description: 'Your step by step, state specific filing plan crafted just for your business.',
              pdfHref: getDocUrl('Guided LLC Registration')
    },
    {
      id: 'ein-guide', 
              title: 'Expedited EIN Application',
      description: 'Your personalized walkthrough to get your federal tax ID fast without confusion.',
              pdfHref: getDocUrl('Expedited EIN Application')
    },
    {
      id: 'operating-agreement',
      title: 'Operating Agreement', 
      description: 'A customizable legal framework designed to match your LLC\'s unique structure.',
      pdfHref: getDocUrl('Operating Agreement')
    }
  ];

  // Document view handlers
  const handleViewDoc = (doc: any) => {
    let content;
    if (doc.id === 'llc-instructions') {
      content = llcHtml;
      markChecklistStep('llc', user?.id);
    } else if (doc.id === 'ein-guide') {
      content = einHtml;
      markChecklistStep('ein', user?.id);
    } else if (doc.id === 'operating-agreement') {
      content = oaHtml;
      markChecklistStep('oa', user?.id);
    }
    
    setModalContent({
      title: doc.title,
      content: content || <div>Content not available</div>
    });
    setIsModalOpen(true);
  };

  const handleDownloadDoc = (doc: any) => {
    if (doc.pdfHref) {
      window.open(doc.pdfHref, '_blank');
      // Mark checklist step as completed when downloading
      if (doc.id === 'llc-instructions') {
        markChecklistStep('llc', user?.id);
      } else if (doc.id === 'ein-guide') {
        markChecklistStep('ein', user?.id);
      } else if (doc.id === 'operating-agreement') {
        markChecklistStep('oa', user?.id);
      }
    } else {
      alert('PDF not available. Please regenerate your documents.');
    }
  };

  // If user hasn't paid and paywall is enabled, show blurred dashboard with unlock overlay
  if (!hasPaid && !isPreviewMode && !PAYWALL_DISABLED) {
    return (
      <div className="relative min-h-screen">
        {/* Blurred dashboard content */}
        <div className="blur-sm pointer-events-none">
          <main className="mx-auto max-w-6xl px-6 py-8 sm:py-10">
            <section className="fade-in-up mb-6">
              <div className="flex items-center justify-between">
                <div className="flex-1">
                  <h2 className="text-base sm:text-lg font-semibold text-gray-900">
                    {user?.full_name?.split(' ')[0] ? `Welcome back, ${user?.full_name?.split(' ')[0]}!` : "Welcome back!"}
                  </h2>
                  <p className="text-sm text-gray-600">
                    {user?.business_name 
                      ? `Everything you need to launch ${user?.business_name} is right here.`
                      : "Everything you need to launch is right here."
                    }
                  </p>
                  <p className="text-xs text-gray-400 mt-1">{formatAppleStyle(new Date())}</p>
                </div>
              </div>
            </section>

            <section className="mt-12">
              <ProgressChecklist
                userId={user?.id}
                links={{
                  llcUrl: "#llc-instructions",
                  einUrl: "#ein-guide", 
                  oaUrl: "#operating-agreement",
                }}
              />
              <DocumentsSection 
                docs={docsData}
                onView={handleViewDoc}
                onDownload={handleDownloadDoc}
              />
            </section>
            
            <section className="mt-12 sm:mt-14">
              <GenieChat 
                avatarSrc="/genie-preview.png" 
                userName={user?.full_name}
                userState={user?.state}
              />
            </section>
          </main>
        </div>

        {/* Unlock overlay */}
        <BlurredDashboardOverlay onUnlock={handleUnlock} isLoading={isProcessingPayment} />
      </div>
    );
  }

  return (
    <main className="mx-auto max-w-6xl px-6 py-8 sm:py-10">
      <section className="fade-in-up mb-6">
        <div className="flex items-center justify-between">
          <div className="flex-1">
            <h2 className="text-base sm:text-lg font-semibold text-gray-900">
              {user?.full_name?.split(' ')[0] ? `Welcome back, ${user?.full_name?.split(' ')[0]}!` : "Welcome back!"}
            </h2>
            <p className="text-sm text-gray-600">
              {user?.business_name 
                ? `Everything you need to launch ${user?.business_name} is right here.`
                : "Everything you need to launch is right here."
              }
            </p>
            <p className="text-xs text-gray-400 mt-1">{formatAppleStyle(new Date())}</p>
          </div>
          {(!isPreviewMode || PAYWALL_DISABLED) && <DashboardActions />}
        </div>
      </section>

      {/* Preview Mode Overlay */}
      {isPreviewMode && !PAYWALL_DISABLED && (
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          className="mb-8 text-center"
        >
                      <h3 className="text-xl font-semibold text-gray-900 mb-2">
              That's it, {user?.full_name?.split(' ')[0] || 'there'}! Your LLC Setup Dashboard is ready.
            </h3>
            <p className="text-gray-600 mb-6">
              Unlock everything you need to launch {user?.business_name || 'your business'} with confidence. LLC filing, EIN setup, and your custom Operating Agreement included. If it doesn't save you time and money get a full refund.
            </p>
          <PremiumButton
            onClick={handleUnlock}
            size="lg"
            className="w-full max-w-md mx-auto text-lg py-4"
          >
            <span className="relative text-white">
              Unlock my dashboard for $49
            </span>
          </PremiumButton>
          <p className="text-sm text-gray-500 mt-3">
            Instant access.
          </p>
        </motion.div>
      )}

      <section className={`mt-12 ${isPreviewMode && !PAYWALL_DISABLED ? 'relative' : ''}`}>
        {isPreviewMode && !PAYWALL_DISABLED && (
          <div className="absolute inset-0 bg-gradient-to-r from-transparent via-white/50 to-white/80 z-10 pointer-events-none"></div>
        )}
        <div className={isPreviewMode && !PAYWALL_DISABLED ? 'blur-sm pointer-events-none' : ''}>
          <ProgressChecklist
            userId={user?.id}
            links={{
              llcUrl: "#llc-instructions",
              einUrl: "#ein-guide", 
              oaUrl: "#operating-agreement",
            }}
          />
          <DocumentsSection 
            docs={docsData}
            onView={handleViewDoc}
            onDownload={handleDownloadDoc}
          />
        </div>
      </section>
      
      <section className={`mt-12 sm:mt-14 ${isPreviewMode && !PAYWALL_DISABLED ? 'relative' : ''}`}>
        {isPreviewMode && !PAYWALL_DISABLED && (
          <div className="absolute inset-0 bg-gradient-to-r from-transparent via-white/50 to-white/80 z-10 pointer-events-none"></div>
        )}
        <div className={isPreviewMode && !PAYWALL_DISABLED ? 'blur-sm pointer-events-none' : ''}>
          <GenieChat 
            avatarSrc="/genie-preview.png" 
            userName={user?.full_name}
            userState={user?.state}
          />
        </div>
      </section>

      {/* Document Modal */}
      <AnimatePresence>
        {isModalOpen && (
          <motion.div
            key="doc-modal"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            transition={{ duration: 0.25, ease: 'easeOut' }}
            className="fixed inset-0 z-50 flex items-center justify-center bg-black/40 p-4"
            style={{ backdropFilter: 'blur(2px)' }}
            onClick={() => setIsModalOpen(false)}
          >
            <motion.div
              initial={{ scale: 0.96, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.96, opacity: 0 }}
              transition={{ duration: 0.25, ease: 'easeOut' }}
              className="relative bg-white rounded-2xl shadow-2xl w-full max-h-[90vh] overflow-y-auto p-4 sm:p-6 lg:p-8"
              style={{ boxShadow: '0 8px 32px rgba(0,0,0,0.12)', maxWidth: '600px', lineHeight: 1.6, display: 'flex', flexDirection: 'column' }}
              onClick={e => e.stopPropagation()}
            >
              <button
                className="absolute top-4 right-4 text-gray-400 hover:text-gray-700 transition-colors text-xl font-bold"
                onClick={() => setIsModalOpen(false)}
                aria-label="Close"
                style={{ background: 'none', border: 'none', cursor: 'pointer' }}
              >
                <span aria-hidden="true">×</span>
              </button>
              <h2 className="text-xl sm:text-2xl font-bold mb-4 sm:mb-6 text-gray-900 pr-8" style={{ fontWeight: 700, color: '#1f2937' }}>
                {modalContent.title}
              </h2>
              <div style={{ maxWidth: 600, margin: '0 auto', lineHeight: 1.6, flex: 1 }}>
                {modalContent.content}
              </div>
              {/* Only append GenieDisclaimer ONCE, outside the OA content, at the very bottom of the modal */}
              <div style={{ marginTop: 40, fontSize: 12, color: '#888', lineHeight: 1.6, textAlign: 'center', fontFamily: '-apple-system, Arial, sans-serif' }}>
                This document is for informational and educational purposes only. It is not legal, tax, or financial advice. Start With Genie is not a law firm and does not provide legal services. You should consult a qualified attorney, accountant, or advisor to ensure this document is appropriate for your specific situation.
                <div style={{ marginTop: 6, fontSize: 11, color: '#aaa' }}>Generated by Start With Genie</div>
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>

      {/* Hidden printable containers for PDF/print handlers */}
      <div style={{ display: 'none' }}>
        <div id="printable-llc-instructions-hidden">{llcHtml}</div>
        <div id="printable-ein-guide-hidden">{einHtml}</div>
        <div id="printable-operating-agreement-hidden">{oaHtmlPDF}</div>
      </div>

      {/* Frictionless Checkout Modal */}
      <FrictionlessCheckoutModal
        isOpen={isCheckoutModalOpen}
        onClose={() => setIsCheckoutModalOpen(false)}
        onSuccess={handleCheckoutSuccess}
      />
    </main>
  )
} 